#!/usr/bin/python3

# Числа

# Заполните код преведенных ниже функций. Функция main() уже настроена
# для вызова функций с несколькими различными параметрами,
# и выводит 'OK' в случае, если вызов функции корректен.
# Начальный код каждой функции содержит 'return'
# и является просто заготовкой для вашего кода.


# A. Сумма чисел кратных 3 и 5
# Если выписать все натуральные числа меньше 10, кратные 3 или 5, 
# то получим 3, 5, 6 и 9. Сумма этих чисел - 23.
# Найдите сумму всех чисел меньше 1000 кратных 3 или 5.
# Примечание: попробуйте записать решение в одну строку при помощи генератора списка
# и встроенной фукнции sum
def multiples():
    return sum(x for x in range(1000) if x % 3 == 0 or x % 5 == 0)


# B. Сумма четных чисел ряда Фибоначчи
# Каждый следующий элемент ряда Фибоначчи получается при сложении 
# двух предыдущих. Начиная с 1 и 2, первые 10 элементов будут:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# Найдите сумму всех элементов ряда Фибоначчи, каждый их которых
# является четным числом и не превышает четырех миллионов.
# Подсказка: разбейте задачу на части: сначала получите сам ряд Фибоначчи,
# затем получите ряд четных элементов.
def fibonacci():
    def fib(max_number):
        a, b = 1, 2

        while a < max_number:
            yield a
            a, b = b, a + b

    return sum(x for x in fib(4000000) if x % 2 == 0)

# С. Самый большой палиндром
# Число-палиндром с обеих сторон (справа и слева) читается одинаково.
# Самое большое число-палиндром, полученное произведением двух двухзначных чисел – 9009 = 91 * 99.
# Найдите самый большой палиндром, полученный произведением двух трёхзначных чисел.


def palindrome():

    max_pali = 0

    def is_pali(x):
        return str(x) == str(x)[::-1]

    for i in range(1000, 99, -1):
        for j in range(1000, 99, -1):
            x = i * j
            if x > max_pali and is_pali(x):
                max_pali = x

    return max_pali

# Простая функция test() используется в main() для вывода
# сравнения того, что возвращает с функция с тем, что она должна возвращать.


def test(got, expected):
    if got == expected:
        prefix = ' OK '
    else:
        prefix = '  X '
    print('%s Получено: %s | Ожидалось: %s' % (prefix, repr(got), repr(expected)))


# Вызывает фунции выше с тестовыми параметрами.
def main():
    print('Сумма чисел кратных 3 и 5')
    test(multiples(), 233168)

    print()
    print('Сумма четных чисел ряда Фибоначчи')
    test(fibonacci(), 4613732)

    print()
    print('Самый большой палиндром')
    test(palindrome(), 906609)

if __name__ == '__main__':
    main()
